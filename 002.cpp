/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <vector>

using namespace std;

vector<unsigned int> fibonacci;
vector<unsigned int>::iterator iter;

unsigned int fibonacciNumber(unsigned int a, unsigned int b);

unsigned int fibonacciNumber(unsigned int a, unsigned int b)
{
   return a+b;
}

unsigned int fibonacciNext()
{
   iter = fibonacci.end();
   iter -= 2;
   unsigned int notlast = *iter;
   return fibonacciNumber(fibonacci.back(), notlast);
}

int main()
{
   fibonacci.push_back(1);
   fibonacci.push_back(2);
   while(fibonacciNext() < 4000000)
   {
   fibonacci.push_back( fibonacciNext() );
   }
   unsigned int total = 0;
   for(iter = fibonacci.begin(); iter != fibonacci.end(); iter++)
   {
      if (*iter % 2 == 0)
      {
         total += *iter;
      }
   }
   cout << total << endl;
   return 0;
}
