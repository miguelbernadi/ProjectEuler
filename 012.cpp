/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>

unsigned int triangle_number(unsigned int order)
{
    unsigned int sum = order + 1;
    for(unsigned int i = 2; i < order; ++i)
    {
        sum += i;
    }
    return sum;
}

unsigned int factorize(unsigned int check)
{
    unsigned int counter = 2; // Always factors: 1 and itself.
    for(unsigned int i = 2; i < check; ++i)
    {
       if(check % i == 0)
       {
           ++counter;
       }
    }
    return counter;
}

int main()
{
    unsigned int check;
    for(int i = 2; ; ++i)
    {
        check = triangle_number(i);
        if( factorize(check) > 500 )
        {
            std::cout << i << std::endl;
            break;
        }
    }
    return 0;
}
